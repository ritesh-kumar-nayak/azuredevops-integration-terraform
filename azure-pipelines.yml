trigger:
 - main
pool: 
  name: Default

stages:
  - stage: Terraform
    jobs:
      - job: Build
        steps:
        - task: TerraformTaskV4@4
          displayName: Terraform Init
          inputs:
            provider: 'azurerm'
            command: 'init'
            backendServiceArm: 'Pay-As-You-Go(4accce4f-9342-4b5d-bf6b-5456d8fa879d)'
            backendAzureRmResourceGroupName: 'storage-rg'
            backendAzureRmStorageAccountName: 'storetfaccritesh'
            backendAzureRmContainerName: 'statefilestore'
            backendAzureRmKey: 'prod.terraform.tfstate'
        - task: TerraformTaskV4@4
          displayName: Terraform Validate
          inputs:
            provider: 'azurerm'
            command: 'validate'

        - task: TerraformTaskV4@4
          displayName: Terraform Format
          inputs:
            provider: 'azurerm'
            command: 'custom'
            outputTo: 'console'
            customCommand: 'fmt'
            environmentServiceNameAzureRM: 'Pay-As-You-Go(4accce4f-9342-4b5d-bf6b-5456d8fa879d)'
        - task: TerraformTaskV4@4
          displayName: Terraform Plan
          inputs:
            commandOptions: '-out $(Build.SourcesDirectory)/tfplanfile' # this will save the plan to a file name tfplanfile
            provider: 'azurerm'
            command: 'plan'
            environmentServiceNameAzureRM: 'Pay-As-You-Go(4accce4f-9342-4b5d-bf6b-5456d8fa879d)'
        - task: Bash@3
          displayName: Install zip utility
          inputs:
            targetType: 'inline'
            script: 'sudo apt-get update && sudo apt-get install -y zip'
        - task: ArchiveFiles@2
          displayName: Archive Files
          inputs:
            rootFolderOrFile: '$(Build.SourcesDirectory)'
            includeRootFolder: true
            archiveType: 'zip'
            archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
            replaceExistingArchive: true
        - task: PublishBuildArtifacts@1
          displayName: Publish Artifact
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: '$(Build.BuildId)-build'
            publishLocation: 'Container'
        